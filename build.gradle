// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {

    apply from: 'gradle/versions.gradle'

    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.aac_navigation"
        classpath 'de.mannodermaus.gradle.plugins:android-junit5:1.5.2.0'
    }
}

plugins {
    id 'com.github.ben-manes.versions' version '0.26.0'
    id "org.jlleitschuh.gradle.ktlint" version '9.0.0'
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

subprojects {
    apply plugin: 'org.jlleitschuh.gradle.ktlint'

    // https://github.com/JLLeitschuh/ktlint-gradle
    ktlint {
        verbose = true
        ignoreFailures = true
        reporters {
            reporter "plain"
            reporter "checkstyle"
        }
        filter {
            exclude('**/generated/**')
            include('**/kotlin/**')
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

// https://github.com/ben-manes/gradle-versions-plugin#tasks
dependencyUpdates.resolutionStrategy {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'eap', 'cr', 'm', 'preview', 'b', 'ea'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-+]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}
